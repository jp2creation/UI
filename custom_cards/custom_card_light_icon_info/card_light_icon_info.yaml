---
card_light_icon_info:
  template:
    - "list_items_light"
    - "ulm_language_variables"
  variables:
    ulm_card_light_name: "[[[ return entity.attributes.friendly_name ]]]"
    ulm_card_light_icon:
  show_icon: false
  show_name: false
  show_label: false
  state:
    - operator: "template"
      value: "[[[ return entity.state == 'on' ]]]"
      styles:
        card:
          - background-color: "rgba(var(--color-background-yellow),var(--opacity-bg))"
  styles:
    grid:
      - grid-template-columns: "min-content auto"
      - column-gap: "0px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
  tap_action:
    action: "toggle"
  hold_action:
    action: "more-info"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        entity: "[[[ return entity.entity_id ]]]"
        template:
          - "icon"
          - "yellow"
        icon: >
          [[[
            var icon = 'mdi:lightbulb';
              if (variables.ulm_card_light_icon != null){
                var icon = variables.ulm_card_light_icon;
              }
              else{
                return icon ;
              }
            return icon ;
          ]]]
        tap_action:
          action: "more-info"
    item2:
      card:
        type: "custom:button-card"
        entity: "[[[ return entity.entity_id ]]]"
        template:
          - "icon_info"
        show_icon: false
        label: >-
          [[[
            if (entity.state !='unavailable'){
              if (entity.state =='off'){
                return variables.ulm_off;
              } else if (entity.state == 'on'){
                if (entity.attributes.brightness != null){
                  var bri = Math.round(entity.attributes.brightness / 2.55);
                  return (bri ? bri : '0') + '%';
                } else {
                  return variables.ulm_on
                }
              }
            } else {
              return variables.ulm_unavailable;
            }
          ]]]
        styles:
          card:
            - box-shadow: "none"
            - border-radius: "var(--border-radius) var(--border-radius) var(--border-radius) var(--border-radius)"
            - padding: "6px"
            - margin-left: "-7px"
            - background-color: "rgba(0,0,0,0)"
        state:
          - styles:
              label:
                - color: "rgba(var(--color-yellow-text),1)"
              name:
                - color: "rgba(var(--color-yellow-text),1)"
            value: "on"
### horizontal slider
card_light_horizontal_icon_info:
  template:
    - "list_items_light"
    - "ulm_language_variables"
  variables:
    ulm_card_light_name: "[[[ return entity.attributes.friendly_name ]]]"
    ulm_card_light_icon:
  show_icon: false
  show_name: false
  show_label: false
  state:
    - operator: "template"
      value: "[[[ return entity.state == 'on' ]]]"
      styles:
        card:
          - background-color: "rgba(var(--color-background-yellow),var(--opacity-bg))"
  styles:
    grid:
      - grid-template-columns: "auto auto"
      - column-gap: "0px"
      - grid-template-columns: "1fr 2fr"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
  tap_action:
    action: "toggle"
  hold_action:
    action: "more-info"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        entity: "[[[ return entity.entity_id ]]]"
        template:
          - "icon_info_card"
        variables:
          ulm_card_light_name: "[[[ return variables.ulm_card_light_name ]]]"
          ulm_card_light_icon: "[[[ return variables.ulm_card_light_icon ]]]"
    item2:
      card:
        type: "custom:my-slider"
        entity: "[[[ return entity.entity_id ]]]"
        radius: "14px"
        height: "42px"
        mainSliderColor: "rgba(var(--color-yellow),1)"
        secondarySliderColor: "rgba(var(--color-yellow),0.2)"
        mainSliderColorOff: "rgba(var(--color-theme),0.05)"
        secondarySliderColorOff: "rgba(var(--color-theme),0.05)"
        thumbHorizontalPadding: "0px"
        thumbVerticalPadding: "0px"
        thumbWidth: "0px"
        card_mod:
        style: |
          ha-card {
            border-radius: 14px;
            box-shadow: none;
          }
### slider card
card_light_slider_icon_info:
  template:
    - "ulm_language_variables"
  variables:
    ulm_card_light_slider_name: "[[[ return entity.attributes.friendly_name ]]]"
    ulm_card_light_icon:
  show_icon: false
  show_name: false
  show_label: false
  state:
    - operator: "template"
      value: "[[[ return entity.state == 'on' ]]]"
      styles:
        card:
          - background-color: "rgba(var(--color-background-yellow),var(--opacity-bg))"
  styles:
    grid:
      - grid-template-areas: "'item1' 'item2'"
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content min-content"
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
  tap_action:
    action: "toggle"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        entity: "[[[ return entity.entity_id ]]]"
        variables:
          ulm_card_light_name: "[[[ return variables.ulm_card_light_name ]]]"
          ulm_card_light_icon: "[[[ return variables.ulm_card_light_icon ]]]"
        template:
          - "icon_info_card"
    item2:
      card:
        type: "custom:my-slider"
        entity: "[[[ return entity.entity_id ]]]"
        radius: "14px"
        height: "42px"
        mainSliderColor: "rgba(var(--color-yellow),1)"
        secondarySliderColor: "rgba(var(--color-yellow),0.2)"
        mainSliderColorOff: "rgba(var(--color-theme),0.05)"
        secondarySliderColorOff: "rgba(var(--color-theme),0.05)"
        thumbHorizontalPadding: "0px"
        thumbVerticalPadding: "0px"
        thumbWidth: "0px"
        card_mod:
        style: |
          ha-card {
            border-radius: 14px;
            box-shadow: none;
          }
card_light_slider_collapse_icon_info:
  template:
    - "ulm_language_variables"
  variables:
    ulm_card_light_name: "[[[ return entity.attributes.friendly_name ]]]"
    ulm_card_light_icon:
  show_icon: false
  show_name: false
  show_label: false
  state:
    - operator: "template"
      value: "[[[ return entity.state == 'on' ]]]"
      styles:
        card:
          - background-color: "rgba(var(--color-background-yellow),var(--opacity-bg))"
        grid:
          - row-gap: "12px"
  styles:
    grid:
      - grid-template-areas: "'item1' 'item2'"
      - grid-template-columns: "1fr"
      - grid-template-rows: "min-content min-content"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
  tap_action:
    action: "toggle"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        entity: "[[[ return entity.entity_id ]]]"
        variables:
          ulm_card_light_name: "[[[ return variables.ulm_card_light_name ]]]"
          ulm_card_light_icon: "[[[ return variables.ulm_card_light_icon ]]]"
        template:
          - "icon_info_card"
    item2:
      card:
        type: "conditional"
        conditions:
          - entity: "[[[ return entity.entity_id ]]]"
            state: "on"
        card:
          type: "custom:my-slider"
          entity: "[[[ return entity.entity_id ]]]"
          radius: "14px"
          height: "42px"
          mainSliderColor: "rgba(var(--color-yellow),1)"
          secondarySliderColor: "rgba(var(--color-yellow),0.2)"
          mainSliderColorOff: "rgba(var(--color-theme),0.05)"
          secondarySliderColorOff: "rgba(var(--color-theme),0.05)"
          thumbHorizontalPadding: "0px"
          thumbVerticalPadding: "0px"
          thumbWidth: "0px"
          card_mod:
          style: |
            ha-card {
              border-radius: 14px;
              box-shadow: none;
            }
### internal templates
list_items_light:
  styles:
    card:
      - box-shadow: "none"
      - padding: "0px"
    grid:
      - grid-template-areas: "'item1 item2'"
      - grid-template-columns: "2fr 1fr"
      - grid-template-rows: "min-content"
      - column-gap: "7px"
icon_info_card:
  template:
    - "list_items_light"
    - "ulm_language_variables"
  variables:
    ulm_card_light_name: "[[[ return variables.ulm_card_light_name ]]]"
    ulm_card_light_icon: "[[[ return variables.ulm_card_light_icon ]]]"
  show_icon: false
  show_name: false
  show_label: false
  styles:
    grid:
      - grid-template-columns: "min-content auto"
      - column-gap: "0px"
    card:
      - background-color: "rgba(0,0,0,0)"
  tap_action:
    action: "toggle"
  hold_action:
    action: "more-info"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        entity: "[[[ return entity.entity_id ]]]"
        template:
          - "icon"
          - "yellow"
        icon: >
          [[[
            var icon = 'mdi:lightbulb';
              if (variables.ulm_card_light_icon != null){
                var icon = variables.ulm_card_light_icon;
              }
              else{
                return icon ;
              }
            return icon ;
          ]]]
        tap_action:
          action: "more-info"
    item2:
      card:
        type: "custom:button-card"
        entity: "[[[ return entity.entity_id ]]]"
        template:
          - "icon_info"
        show_icon: false
        label: >-
          [[[
            if (entity.state !='unavailable'){
              if (entity.state =='off'){
                return variables.ulm_off;
              } else if (entity.state == 'on'){
                if (entity.attributes.brightness != null){
                  var bri = Math.round(entity.attributes.brightness / 2.55);
                  return (bri ? bri : '0') + '%';
                } else {
                  return variables.ulm_on
                }
              }
            } else {
              return variables.ulm_unavailable;
            }
          ]]]
        name: "[[[ return variables.ulm_card_light_name ]]]"
        state:
          - styles:
              label:
                - color: "rgba(var(--color-yellow-text),1)"
              name:
                - color: "rgba(var(--color-yellow-text),1)"
            value: "on"
        styles:
          card:
            - box-shadow: "none"
            - border-radius: "var(--border-radius) var(--border-radius) var(--border-radius) var(--border-radius)"
            - padding: "6px"
            - margin-left: "-7px"
            - background-color: "rgba(0,0,0,0)"
